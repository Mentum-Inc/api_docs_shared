openapi: '3.0.2'
info:
  title: Token Auth API
  description: API reference for token authentication. 
  contact:
    email: support@getmentum.com
  version: '1.0'

servers:
  - url: https://sandbox.getmentum.com/v0
    description: Sandbox environment.

tags:
  - name: Token Authentication
    description: Use the endpoints below to create and manage your access tokens.

components:
  securitySchemes:
    Basic_Authentication:
      description: |
        Mentum currently provides two authentication methods: **Basic Auth (via API Key Pairs)** and **JWT tokens**.
        
        Whenever using Basic Auth, we recommend using a secure communication protocol like **HTTPS** or **SSL**.

        From the developer dashboard, generate an API Key Pair (**Key Id** and **Secret**) 
        and use them as username and password respectively via Basic Authentication.
      type: http
      scheme: basic
    JWT_Authentication:
      description: |
        JWT Tokens are generally used by front-end components such as Dynamic Widgets or Single Page Applications (SPA).

        JWT tokens are generated by your API Key Pair (**Key Id** and **Secret**). You can generate a new API Key Pair via the developer dashboard.
        
        Use `/auth/accessToken/create` to exchange your API Key Pair for a JWT token.
        
        The JWT Access Token has an expiration of thirty minutes. You can refresh the expired JWT token via `/auth/accessToken/refresh` endpoint.
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /auth/accessToken/create:
      post:
        security:
          - Basic_Authentication: []
        tags:
        - Token Authentication
        summary: Create an Access Token
        description: |
          Create a token for a registered or an unregistered user. Pass the mentum_user_id for registered users.
          Registered user: a user account that has completed the onboarding form and has a mentum_user_id assigned.
          Unregistered user: a user account that has not yet completed the onboarding form and has no mentum_user_id.
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                    mentum_user_id:
                      description: The user's Mentum ID that was created during account opening.
                      type: string
                      format: uuid
        responses:
          '200':
            description:  OK
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    access:
                      description: JWT Access Token
                      type: string
                    refresh:
                      description: JWT Refresh Token
                      type: string
                  example:
                    access: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjQ5MDQ1ODgyLCJpYXQiOjE2NDkwNDQwODIsImp0aSI6Ijc0MGQ2YjYxNDc4MTRkNGFhZDQ2NDQ2IiwidXNlcl9pZCI6NDZ9.3y2d4oNkxjU19jhWn-sw2clHQWEXZHWqrcIwrsUQmxY
                    refresh: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY0OTEzMDQ4MiwiaWF0IjoxNjQ5MDQ0MDgyLCJqdGkiOiIyMjE3ZjA4YmU4ZDA0NmExODEyNTk4IiwidXNlcl9pZCI6NDZ9.P5H8K7ZGINBroQbhnZlXllG-2SoQy7xrEASrK79KyPg
                  items:
                    type: string
          "401":
            description: Bad Request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: The response message
                      type: string
                      example: Unauthorized
  /auth/accessToken/logout:
      post:
        security:
          - Basic_Authentication: []
          - JWT_Authentication: []
        tags:
          - Token Authentication
        summary: Log out a Token
        description: Use this endpoint to log out an access token, refresh token, or both.
        requestBody:
          content:
            application/json:
              schema: 
                type: object
                properties:
                  access:
                    description: JWT Access Token
                    type: string
                  refresh:
                    description: JWT Refresh Token
                    type: string
                example:
                  access: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjQ5MDQ1ODgyLCJpYXQiOjE2NDkwNDQwODIsImp0aSI6Ijc0MGQ2YjYxNDc4MTRkNGFhZDQ2NDQ2IiwidXNlcl9pZCI6NDZ9.3y2d4oNkxjU19jhWn-sw2clHQWEXZHWqrcIwrsUQmxY
                  refresh: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY0OTEzMDQ4MiwiaWF0IjoxNjQ5MDQ0MDgyLCJqdGkiOiIyMjE3ZjA4YmU4ZDA0NmExODEyNTk4IiwidXNlcl9pZCI6NDZ9.P5H8K7ZGINBroQbhnZlXllG-2SoQy7xrEASrK79KyPg
                items: 
                  type: string
        responses:
          '200':
            description: OK
          "401":
            description: Bad Request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: The response message
                      type: string
                      example: Unauthorized
  /auth/accessToken/refresh:
      post:
        tags:
          - Token Authentication
        summary: Refresh an Access Token
        description: Refresh an Access Token
        requestBody:
          content:
            application/json:
              schema: 
                type: object
                properties:
                  refresh:
                    description: JWT Refresh Token
                    type: string
                example:
                  refresh: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY0OTEzMDQ4MiwiaWF0IjoxNjQ5MDQ0MDgyLCJqdGkiOiIyMjE3ZjA4YmU4ZDA0NmExODEyNTk4IiwidXNlcl9pZCI6NDZ9.P5H8K7ZGINBroQbhnZlXllG-2SoQy7xrEASrK79KyPg
                items: 
                  type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    access:
                      description: JWT Access Token
                      type: string
                    refresh:
                      description: JWT Refresh Token
                      type: string
                  example:
                    access: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjQ5MDQ1ODgyLCJpYXQiOjE2NDkwNDQwODIsImp0aSI6Ijc0MGQ2YjYxNDc4MTRkNGFhZDQ2NDQ2IiwidXNlcl9pZCI6NDZ9.3y2d4oNkxjU19jhWn-sw2clHQWEXZHWqrcIwrsUQmxY
                    refresh: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY0OTEzMDQ4MiwiaWF0IjoxNjQ5MDQ0MDgyLCJqdGkiOiIyMjE3ZjA4YmU4ZDA0NmExODEyNTk4IiwidXNlcl9pZCI6NDZ9.P5H8K7ZGINBroQbhnZlXllG-2SoQy7xrEASrK79KyPg
                  items: 
                    type: string
          "401":
            description: Bad Request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: The response message
                      type: string
                      example: Unauthorized
